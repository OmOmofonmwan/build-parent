name: Publish Pipeline

run-name: 'Publish Artifacts'

on:
   workflow_run:
    workflows:
      - Build Workflow
      - Release Workflow
    types:
      - completed
        
        
jobs:
  publish-artifacts:
      name: Publish Artifacts
      runs-on: self-hosted
      if: github.event.workflow_run.conclusion == 'success'
      env:
        ARTIFACT_REPOSITORY_ID: "maven-snapshots"
        REPOSITORY_NAME: ${{github.repository}}
        BRANCH: "main"  
      steps:  
        - name: Setup Maven Action
          uses: s4u/setup-maven-action@v1.7.0
          with:
            checkout-fetch-depth: 0
            java-version: 21
            java-distribution: temurin
            maven-version: 3.8.7
        
        - name: Checkout Forked Code Repository
          uses: actions/checkout@v4
          if:   github.event.workflow_run.event == 'pull_request'
          with:
            repository: ${{github.actor}}/${{github.event.repository.name}}
            ref: ${{github.event.workflow_run.head_branch}}

        - name: Checkout ikmdev Code Repository
          if:   github.event.workflow_run.event != 'pull_request' && github.event.workflow_run.name == 'Build Workflow'
          uses: actions/checkout@v4

        - name: Get Recent Tag
          id: getRecentTag
          if: github.event.workflow_run.name == 'Release Workflow'
          run:  echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

        - name: Print Output
          run: echo ${{steps.getRecentTag.outputs.tag}}

        - name: Checkout Tag Code 
          uses: actions/checkout@v4
          if:   github.event.workflow_run.name == 'Release Workflow'
          with:
            ref: ${{steps.getRecentTag.outputs.tag}}


        - name: Settings.xml Config
          uses: whelk-io/maven-settings-xml-action@v22
          with:
                servers: > 
                        [
                          {
                            "id": "nexus"
                          },
                          {
                            "id": "${{vars.NEXUS_SNAPSHOT_REPO_ID}}",
                            "username": "${{ vars.NEXUS_USERNAME }}",
                            "password": "${{ secrets.NEXUS_PASSWORD}}"
                          },
                          {
                            "id": "${{vars.NEXUS_MIRROR_ID}}",
                            "username": "${{ vars.NEXUS_USERNAME }}",
                            "password": "${{ secrets.NEXUS_PASSWORD}}"
                          }
                        ] 
                profiles: >
                       [{
                            "id": "inject-application-properties",
                            "properties": {
                                "altSnapshotDeploymentRepository": "${{vars.NEXUS_SNAPSHOT_REPO_ID}}::${{vars.NEXUS_SNAPSHOT_REPO_URL}}",
                                "altReleaseDeploymentRepository": "${{vars.NEXUS_RELEASE_REPO_ID}}::${{vars.NEXUS_RELEASE_REPO_URL}}"
                            }
                       }]
                active_profiles: > 
                       [
                          "inject-application-properties"
                       ]
                mirrors: >
                       [{
                           "id": "${{vars.NEXUS_MIRROR_ID}}",
                           "name": "${{vars.NEXUS_MIRROR_ID}}",
                           "url": "${{vars.NEXUS_MIRROR_URL}}",
                           "mirrorOf": "*"
                       }]
                output_file: /home/ec2-user/maven/.m2/settings.xml

        - name: Deploy To Nexus
          run: |
                   mvn deploy \
                      --batch-mode \
                      -e \
                      -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
                      -DskipTests \
                      -DskipITs \
                      -Dmaven.main.skip \
                      -Dmaven.test.skip \
                      -s '/home/ec2-user/actions-runner/_work/${{github.event.repository.name}}/${{github.event.repository.name}}/.m2/settings.xml' \
                      -DrepositoryId='${{env.ARTIFACT_REPOSITORY_ID}}' \
                      -Dgpg.passphrase=${{secrets.GPG_PASSPHRASE}}


        - name: Publish To OSSRH (Maven Central Staging)
          if: github.event.workflow.name == 'Release Workflow'
          run: echo "Publishint to OSSRH Repo -- ${{env.ARTIFACT_REPOSITORY_ID}}"

  


          
            



  

        